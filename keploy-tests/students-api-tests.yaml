version: api.keploy.io/v1beta1
kind: Http
metadata:
  name: students-api-test-suite
  labels:
    app: studenthub-dashboard
spec:
  tests:
    - name: test-get-all-students
      request:
        method: GET
        url: /api/students
        headers:
          Content-Type: application/json
          Accept: application/json
      expectedResponse:
        status: 200
        headers:
          Content-Type: application/json
        body:
          data: []
          error: null
      
    - name: test-create-student-valid
      request:
        method: POST
        url: /api/students
        headers:
          Content-Type: application/json
        body: |
          {
            "name": "Alice Johnson",
            "age": 22,
            "course": "Computer Science"
          }
      expectedResponse:
        status: 201
        headers:
          Content-Type: application/json
        body:
          data:
            name: "Alice Johnson"
            age: 22
            course: "Computer Science"
          error: null

    - name: test-create-student-invalid-name
      request:
        method: POST
        url: /api/students
        headers:
          Content-Type: application/json
        body: |
          {
            "name": "",
            "age": 22,
            "course": "Computer Science"
          }
      expectedResponse:
        status: 400
        body:
          data: null
          error: "Name is required and must not be empty"

    - name: test-create-student-invalid-age
      request:
        method: POST
        url: /api/students
        headers:
          Content-Type: application/json
        body: |
          {
            "name": "John Doe",
            "age": 0,
            "course": "Computer Science"
          }
      expectedResponse:
        status: 400
        body:
          data: null
          error: "Age must be between 1 and 100"

    - name: test-create-student-invalid-course
      request:
        method: POST
        url: /api/students
        headers:
          Content-Type: application/json
        body: |
          {
            "name": "Jane Smith",
            "age": 21,
            "course": "Invalid Course"
          }
      expectedResponse:
        status: 400
        body:
          data: null
          error: "Course must be one of the available options"

    - name: test-search-students-by-name
      request:
        method: GET
        url: /api/students/search?q=Alice
        headers:
          Content-Type: application/json
      expectedResponse:
        status: 200
        body:
          data: []
          error: null

    - name: test-search-students-by-course
      request:
        method: GET
        url: /api/students/search?course=Computer%20Science
        headers:
          Content-Type: application/json
      expectedResponse:
        status: 200
        body:
          data: []
          error: null

    - name: test-search-students-with-filters
      request:
        method: GET
        url: /api/students/search?min_age=20&max_age=25&course=Computer%20Science
        headers:
          Content-Type: application/json
      expectedResponse:
        status: 200
        body:
          data: []
          error: null

    - name: test-analytics-overview
      request:
        method: GET
        url: /api/analytics/overview
        headers:
          Content-Type: application/json
      expectedResponse:
        status: 200
        body:
          data:
            totalStudents: 0
            averageAge: 0
            mostPopularCourse: ""
            courseDistribution: []
            ageDistribution: {}
          error: null

    - name: test-analytics-courses
      request:
        method: GET
        url: /api/analytics/courses
        headers:
          Content-Type: application/json
      expectedResponse:
        status: 200
        body:
          data: []
          error: null

    - name: test-analytics-age-groups
      request:
        method: GET
        url: /api/analytics/age-groups
        headers:
          Content-Type: application/json
      expectedResponse:
        status: 200
        body:
          data: {}
          error: null

    - name: test-nonexistent-endpoint
      request:
        method: GET
        url: /api/nonexistent
        headers:
          Content-Type: application/json
      expectedResponse:
        status: 404
        body:
          data: null
          error: "Endpoint not found"
